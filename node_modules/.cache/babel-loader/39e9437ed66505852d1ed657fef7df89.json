{"ast":null,"code":"var _jsxFileName = \"/Users/brenoaraujo/Projetos Trybe/sd-022-b-project-trivia-react-redux/src/components/Questions.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Questions extends Component {\n  constructor() {\n    super();\n\n    this.timer = () => {\n      const oneSec = 1000;\n      setInterval(() => this.setState(prevState => ({\n        timer: prevState.timer - 1\n      }), this.clearTimer), oneSec);\n    };\n\n    this.clearTimer = () => {\n      const {\n        timer\n      } = this.state;\n\n      if (timer === 0) {\n        this.setState({\n          disabled: true\n        });\n      }\n    };\n\n    this.randomAswers = () => {\n      const {\n        question\n      } = this.props;\n      const half = 0.5;\n      const answers = [question.correct_answer, ...question.incorrect_answers].sort(() => Math.random() - half);\n      this.setState({\n        answers\n      });\n    };\n\n    this.state = {\n      timer: 30,\n      disabled: false,\n      answers: []\n    };\n  }\n\n  componentDidMount() {\n    this.timer();\n    this.randomAswers();\n  }\n\n  render() {\n    const {\n      question\n    } = this.props;\n    const {\n      timer,\n      disabled,\n      answers\n    } = this.state; // const half = 0.5;\n    // const answers = [question.correct_answer, ...question.incorrect_answers]\n    //   .sort(() => Math.random() - half);\n    // console.log(answers);\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, timer), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"question-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, question.category), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"question-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, question.question), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, question.correct_answer), /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"answer-options\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, answers.map((a, i) => {\n      let datatestid = '';\n\n      if (a === question.correct_answer) {\n        datatestid = 'correct-answer';\n      } else {\n        datatestid = `wrong-answer-${i}`;\n      }\n\n      const handleClick = () => answers.forEach((element, idx) => {\n        const button = document.getElementById(idx);\n\n        if (element === question.correct_answer) {\n          button.className = 'correct';\n        } else {\n          button.className = 'incorrect';\n        }\n      });\n\n      return /*#__PURE__*/React.createElement(\"button\", {\n        key: a,\n        id: i,\n        type: \"button\",\n        \"data-testid\": datatestid,\n        disabled: disabled,\n        onClick: handleClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }\n      }, a);\n    })));\n  }\n\n}\n\nQuestions.propTypes = {\n  question: PropTypes.shape({\n    correct_answer: PropTypes.string,\n    incorrect_answers: PropTypes.arrayOf(PropTypes.string),\n    category: PropTypes.string,\n    question: PropTypes.string\n  }).isRequired\n};\nexport default Questions;","map":{"version":3,"sources":["/Users/brenoaraujo/Projetos Trybe/sd-022-b-project-trivia-react-redux/src/components/Questions.js"],"names":["React","Component","PropTypes","Questions","constructor","timer","oneSec","setInterval","setState","prevState","clearTimer","state","disabled","randomAswers","question","props","half","answers","correct_answer","incorrect_answers","sort","Math","random","componentDidMount","render","category","map","a","i","datatestid","handleClick","forEach","element","idx","button","document","getElementById","className","propTypes","shape","string","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Questions extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      timer: 30,\n      disabled: false,\n      answers: [],\n    };\n  }\n\n  componentDidMount() {\n    this.timer();\n    this.randomAswers();\n  }\n\n  timer = () => {\n    const oneSec = 1000;\n    setInterval(() => this.setState((prevState) => ({\n      timer: prevState.timer - 1,\n    }), this.clearTimer), oneSec);\n  }\n\n  clearTimer = () => {\n    const { timer } = this.state;\n    if (timer === 0) {\n      this.setState({ disabled: true });\n    }\n  }\n\n  randomAswers = () => {\n    const { question } = this.props;\n    const half = 0.5;\n    const answers = [question.correct_answer, ...question.incorrect_answers]\n      .sort(() => Math.random() - half);\n    this.setState({ answers });\n  }\n\n  render() {\n    const { question } = this.props;\n    const { timer, disabled, answers } = this.state;\n    // const half = 0.5;\n    // const answers = [question.correct_answer, ...question.incorrect_answers]\n    //   .sort(() => Math.random() - half);\n    // console.log(answers);\n    return (\n      <div>\n        <h2>{timer}</h2>\n        <p data-testid=\"question-category\">{question.category}</p>\n        <p data-testid=\"question-text\">{question.question}</p>\n        <p>{question.correct_answer}</p>\n        <div data-testid=\"answer-options\">\n          {answers.map((a, i) => {\n            let datatestid = '';\n            if (a === question.correct_answer) {\n              datatestid = 'correct-answer';\n            } else {\n              datatestid = `wrong-answer-${i}`;\n            }\n            const handleClick = () => (\n              answers.forEach((element, idx) => {\n                const button = document.getElementById(idx);\n                if (element === question.correct_answer) {\n                  button.className = 'correct';\n                } else {\n                  button.className = 'incorrect';\n                }\n              }));\n            return (\n              <button\n                key={ a }\n                id={ i }\n                type=\"button\"\n                data-testid={ datatestid }\n                disabled={ disabled }\n                onClick={ handleClick }\n              >\n                {a}\n              </button>\n            );\n          })}\n        </div>\n      </div>\n\n    );\n  }\n}\n\nQuestions.propTypes = {\n  question: PropTypes.shape({\n    correct_answer: PropTypes.string,\n    incorrect_answers: PropTypes.arrayOf(PropTypes.string),\n    category: PropTypes.string,\n    question: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Questions;\n"]},"metadata":{},"sourceType":"module"}