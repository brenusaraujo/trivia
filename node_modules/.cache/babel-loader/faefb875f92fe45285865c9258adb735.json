{"ast":null,"code":"var _jsxFileName = \"/Users/brenoaraujo/Projetos Trybe/sd-022-b-project-trivia-react-redux/src/pages/Login.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport fetchTokenTrivia from '../services';\nimport { emailAction, usernameAction } from '../redux/actions';\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.configPagePush = () => {\n      const {\n        history\n      } = this.props;\n      history.push('/configuracao');\n    };\n\n    this.state = {\n      userName: '',\n      email: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.configPagePush = this.configPagePush.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleChange(_ref) {\n    let {\n      target\n    } = _ref;\n    const {\n      name,\n      value\n    } = target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  async handleClick() {\n    const token = await fetchTokenTrivia();\n    localStorage.setItem('token', token);\n    const {\n      history,\n      emailDispatch,\n      usernameDispatch\n    } = this.props;\n    const {\n      email,\n      userName\n    } = this.state;\n    history.push('/game');\n    emailDispatch(email);\n    usernameDispatch(userName);\n  }\n\n  render() {\n    const {\n      userName,\n      email\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      action: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"userName\",\n      id: \"userName\",\n      \"data-testid\": \"input-player-name\",\n      onChange: this.handleChange,\n      value: userName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      id: \"email\",\n      \"data-testid\": \"input-gravatar-email\",\n      onChange: this.handleChange,\n      value: email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      disabled: !(userName.length > 0 && email.length > 0),\n      \"data-testid\": \"btn-play\",\n      type: \"button\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, \"Play\"), /*#__PURE__*/React.createElement(\"button\", {\n      \"data-testid\": \"btn-settings\",\n      type: \"button\",\n      onClick: this.configPagePush,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, \"Configura\\xE7\\xF5es\"));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  emailDispatch: payload => dispatch(emailAction(payload)),\n  usernameDispatch: payload => dispatch(usernameAction(payload))\n});\n\nLogin.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func\n  }).isRequired,\n  emailDispatch: PropTypes.func.isRequired,\n  usernameDispatch: PropTypes.func.isRequired\n};\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/brenoaraujo/Projetos Trybe/sd-022-b-project-trivia-react-redux/src/pages/Login.js"],"names":["React","Component","PropTypes","connect","fetchTokenTrivia","emailAction","usernameAction","Login","constructor","configPagePush","history","props","push","state","userName","email","handleChange","bind","handleClick","target","name","value","setState","token","localStorage","setItem","emailDispatch","usernameDispatch","render","length","mapDispatchToProps","dispatch","payload","propTypes","shape","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport fetchTokenTrivia from '../services';\nimport { emailAction, usernameAction } from '../redux/actions';\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      userName: '',\n      email: '',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.configPagePush = this.configPagePush.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  configPagePush = () => {\n    const { history } = this.props;\n    history.push('/configuracao');\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  async handleClick() {\n    const token = await fetchTokenTrivia();\n    localStorage.setItem('token', token);\n    const { history, emailDispatch, usernameDispatch } = this.props;\n    const { email, userName } = this.state;\n    history.push('/game');\n    emailDispatch(email);\n    usernameDispatch(userName);\n  }\n\n  render() {\n    const { userName, email } = this.state;\n    return (\n      <form action=\"\">\n        <div\n          className=\"input-login\"\n        >\n          <input\n            type=\"text\"\n            name=\"userName\"\n            id=\"userName\"\n            data-testid=\"input-player-name\"\n            onChange={ this.handleChange }\n            value={ userName }\n          />\n          <input\n            type=\"email\"\n            name=\"email\"\n            id=\"email\"\n            data-testid=\"input-gravatar-email\"\n            onChange={ this.handleChange }\n            value={ email }\n          />\n\n        </div>\n        <button\n          disabled={ !((userName.length > 0 && email.length > 0)) }\n          data-testid=\"btn-play\"\n          type=\"button\"\n          onClick={ this.handleClick }\n        >\n          Play\n        </button>\n        <button\n          data-testid=\"btn-settings\"\n          type=\"button\"\n          onClick={ this.configPagePush }\n        >\n          Configurações\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  emailDispatch: (payload) => dispatch(emailAction(payload)),\n  usernameDispatch: (payload) => dispatch(usernameAction(payload)),\n});\n\nLogin.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n  emailDispatch: PropTypes.func.isRequired,\n  usernameDispatch: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}