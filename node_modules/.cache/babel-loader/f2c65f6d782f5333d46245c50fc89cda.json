{"ast":null,"code":"var _jsxFileName = \"/Users/brenoaraujo/Projetos Trybe/sd-022-b-project-trivia-react-redux/src/pages/Game.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport getTriviaApi from '../services/triviaAPI';\nimport Questions from '../components/Questions';\nimport Header from '../components/Header';\n\nclass Game extends Component {\n  constructor() {\n    super();\n\n    this.questionsExecute = async () => {\n      const {\n        history\n      } = this.props;\n      const result = await getTriviaApi(localStorage.getItem('token'));\n      const error = 3;\n      if (result.response_code === error) history.push('/');else this.setState({\n        questions: result.results\n      });\n    };\n\n    this.handleNext = () => {\n      const {\n        history\n      } = this.props;\n      const {\n        index\n      } = this.state;\n      const endOfArray = 3;\n      this.setState(prevState => {\n        if (index > endOfArray) history.push('/feedback');\n        return {\n          index: prevState.index + 1\n        };\n      });\n    };\n\n    this.state = {\n      questions: [],\n      index: 0\n    };\n  }\n\n  componentDidMount() {\n    this.questionsExecute();\n  }\n\n  render() {\n    const {\n      questions,\n      index\n    } = this.state;\n    const endOfArray = 4;\n    return /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }), questions.length !== 0 && index <= endOfArray ? /*#__PURE__*/React.createElement(Questions, {\n      question: questions[index],\n      handleNext: this.handleNext,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 51\n      }\n    }) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, \"Carregando\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  gravatarEmail: state.player.gravatarEmail,\n  name: state.player.name,\n  score: state.player.score\n});\n\nGame.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func\n  }).isRequired\n};\nexport default connect(mapStateToProps)(Game);","map":{"version":3,"sources":["/Users/brenoaraujo/Projetos Trybe/sd-022-b-project-trivia-react-redux/src/pages/Game.js"],"names":["React","Component","PropTypes","connect","getTriviaApi","Questions","Header","Game","constructor","questionsExecute","history","props","result","localStorage","getItem","error","response_code","push","setState","questions","results","handleNext","index","state","endOfArray","prevState","componentDidMount","render","length","mapStateToProps","gravatarEmail","player","name","score","propTypes","shape","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,IAAN,SAAmBN,SAAnB,CAA6B;AAC3BO,EAAAA,WAAW,GAAG;AACZ;;AADY,SAadC,gBAbc,GAaK,YAAY;AAC7B,YAAM;AAAEC,QAAAA;AAAF,UAAc,KAAKC,KAAzB;AACA,YAAMC,MAAM,GAAG,MAAMR,YAAY,CAACS,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAD,CAAjC;AACA,YAAMC,KAAK,GAAG,CAAd;AACA,UAAIH,MAAM,CAACI,aAAP,KAAyBD,KAA7B,EAAoCL,OAAO,CAACO,IAAR,CAAa,GAAb,EAApC,KACK,KAAKC,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAEP,MAAM,CAACQ;AAApB,OAAd;AACN,KAnBa;;AAAA,SAqBdC,UArBc,GAqBD,MAAM;AACjB,YAAM;AAAEX,QAAAA;AAAF,UAAc,KAAKC,KAAzB;AACA,YAAM;AAAEW,QAAAA;AAAF,UAAY,KAAKC,KAAvB;AACA,YAAMC,UAAU,GAAG,CAAnB;AACA,WAAKN,QAAL,CAAeO,SAAD,IAAe;AAC3B,YAAIH,KAAK,GAAGE,UAAZ,EAAwBd,OAAO,CAACO,IAAR,CAAa,WAAb;AACxB,eAAO;AAAEK,UAAAA,KAAK,EAAEG,SAAS,CAACH,KAAV,GAAkB;AAA3B,SAAP;AACD,OAHD;AAID,KA7Ba;;AAGZ,SAAKC,KAAL,GAAa;AACXJ,MAAAA,SAAS,EAAE,EADA;AAEXG,MAAAA,KAAK,EAAE;AAFI,KAAb;AAID;;AAEDI,EAAAA,iBAAiB,GAAG;AAClB,SAAKjB,gBAAL;AACD;;AAoBDkB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAER,MAAAA,SAAF;AAAaG,MAAAA;AAAb,QAAuB,KAAKC,KAAlC;AACA,UAAMC,UAAU,GAAG,CAAnB;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEIL,SAAS,CACRS,MADD,KACY,CADZ,IACiBN,KAAK,IAAIE,UAD3B,gBACyC,oBAAC,SAAD;AACtC,MAAA,QAAQ,EAAGL,SAAS,CAACG,KAAD,CADkB;AAEtC,MAAA,UAAU,EAAG,KAAKD,UAFoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADzC,gBAKG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPN,CADF;AAWD;;AA9C0B;;AAiD7B,MAAMQ,eAAe,GAAIN,KAAD,KAAY;AAClCO,EAAAA,aAAa,EAAEP,KAAK,CAACQ,MAAN,CAAaD,aADM;AAElCE,EAAAA,IAAI,EAAET,KAAK,CAACQ,MAAN,CAAaC,IAFe;AAGlCC,EAAAA,KAAK,EAAEV,KAAK,CAACQ,MAAN,CAAaE;AAHc,CAAZ,CAAxB;;AAMA1B,IAAI,CAAC2B,SAAL,GAAiB;AACfxB,EAAAA,OAAO,EAAER,SAAS,CAACiC,KAAV,CAAgB;AACvBlB,IAAAA,IAAI,EAAEf,SAAS,CAACkC;AADO,GAAhB,EAENC;AAHY,CAAjB;AAMA,eAAelC,OAAO,CAAC0B,eAAD,CAAP,CAAyBtB,IAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport getTriviaApi from '../services/triviaAPI';\nimport Questions from '../components/Questions';\nimport Header from '../components/Header';\n\nclass Game extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      questions: [],\n      index: 0,\n    };\n  }\n\n  componentDidMount() {\n    this.questionsExecute();\n  }\n\n  questionsExecute = async () => {\n    const { history } = this.props;\n    const result = await getTriviaApi(localStorage.getItem('token'));\n    const error = 3;\n    if (result.response_code === error) history.push('/');\n    else this.setState({ questions: result.results });\n  }\n\n  handleNext = () => {\n    const { history } = this.props;\n    const { index } = this.state;\n    const endOfArray = 3;\n    this.setState((prevState) => {\n      if (index > endOfArray) history.push('/feedback');\n      return { index: prevState.index + 1 };\n    });\n  }\n\n  render() {\n    const { questions, index } = this.state;\n    const endOfArray = 4;\n    return (\n      <section>\n        <Header />\n        {(questions\n          .length !== 0 && index <= endOfArray) ? <Questions\n            question={ questions[index] }\n            handleNext={ this.handleNext }\n          />\n          : <p>Carregando</p>}\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  gravatarEmail: state.player.gravatarEmail,\n  name: state.player.name,\n  score: state.player.score,\n});\n\nGame.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nexport default connect(mapStateToProps)(Game);\n"]},"metadata":{},"sourceType":"module"}