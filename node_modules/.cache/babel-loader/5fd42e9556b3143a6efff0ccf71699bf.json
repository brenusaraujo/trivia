{"ast":null,"code":"var _jsxFileName = \"/Users/brenoaraujo/Projetos Trybe/sd-022-b-project-trivia-react-redux/src/components/Questions.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Questions extends Component {\n  render() {\n    const {\n      question\n    } = this.props;\n    const half = 0.5;\n    const answers = [question.correct_answer, ...question.incorrect_answers].sort(() => Math.random() - half);\n    console.log(answers);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"question-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }\n    }, question.category), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"question-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }\n    }, question.question), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }\n    }, question.correct_answer), /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"answer-options\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }\n    }, answers.map((a, i) => {\n      let datatestid = '';\n\n      if (a === question.correct_answer) {\n        datatestid = 'correct-answer';\n      } else {\n        datatestid = `wrong-answer-${i}`;\n      }\n\n      return /*#__PURE__*/React.createElement(\"button\", {\n        key: a,\n        type: \"button\",\n        \"data-testid\": datatestid,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }\n      }, a);\n    })));\n  }\n\n}\n\nQuestions.propTypes = {\n  question: PropTypes.shape({\n    correct_answer: PropTypes.string,\n    incorrect_answers: PropTypes.arrayOf(PropTypes.string),\n    category: PropTypes.string,\n    question: PropTypes.string\n  }).isRequired\n};\nexport default Questions;","map":{"version":3,"sources":["/Users/brenoaraujo/Projetos Trybe/sd-022-b-project-trivia-react-redux/src/components/Questions.js"],"names":["React","Component","PropTypes","Questions","render","question","props","half","answers","correct_answer","incorrect_answers","sort","Math","random","console","log","category","map","a","i","datatestid","propTypes","shape","string","arrayOf","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAChCG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKC,KAA1B;AACA,UAAMC,IAAI,GAAG,GAAb;AACA,UAAMC,OAAO,GAAG,CAACH,QAAQ,CAACI,cAAV,EAA0B,GAAGJ,QAAQ,CAACK,iBAAtC,EACbC,IADa,CACR,MAAMC,IAAI,CAACC,MAAL,KAAgBN,IADd,CAAhB;AAEAO,IAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,qBAAY,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoCH,QAAQ,CAACW,QAA7C,CADF,eAEE;AAAG,qBAAY,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCX,QAAQ,CAACA,QAAzC,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,QAAQ,CAACI,cAAb,CAHF,eAIE;AAAK,qBAAY,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,OAAO,CAACS,GAAR,CAAY,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACrB,UAAIC,UAAU,GAAG,EAAjB;;AACA,UAAIF,CAAC,KAAKb,QAAQ,CAACI,cAAnB,EAAmC;AAAEW,QAAAA,UAAU,GAAG,gBAAb;AAAgC,OAArE,MAA2E;AACzEA,QAAAA,UAAU,GAAI,gBAAeD,CAAE,EAA/B;AACD;;AACD,0BACE;AACE,QAAA,GAAG,EAAGD,CADR;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,uBAAcE,UAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKGF,CALH,CADF;AAQD,KAbA,CADH,CAJF,CADF;AAwBD;;AA/B+B;;AAkClCf,SAAS,CAACkB,SAAV,GAAsB;AACpBhB,EAAAA,QAAQ,EAAEH,SAAS,CAACoB,KAAV,CAAgB;AACxBb,IAAAA,cAAc,EAAEP,SAAS,CAACqB,MADF;AAExBb,IAAAA,iBAAiB,EAAER,SAAS,CAACsB,OAAV,CAAkBtB,SAAS,CAACqB,MAA5B,CAFK;AAGxBP,IAAAA,QAAQ,EAAEd,SAAS,CAACqB,MAHI;AAIxBlB,IAAAA,QAAQ,EAAEH,SAAS,CAACqB;AAJI,GAAhB,EAKPE;AANiB,CAAtB;AASA,eAAetB,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Questions extends Component {\n  render() {\n    const { question } = this.props;\n    const half = 0.5;\n    const answers = [question.correct_answer, ...question.incorrect_answers]\n      .sort(() => Math.random() - half);\n    console.log(answers);\n    return (\n      <div>\n        <p data-testid=\"question-category\">{question.category}</p>\n        <p data-testid=\"question-text\">{question.question}</p>\n        <p>{question.correct_answer}</p>\n        <div data-testid=\"answer-options\">\n          {answers.map((a, i) => {\n            let datatestid = '';\n            if (a === question.correct_answer) { datatestid = 'correct-answer'; } else {\n              datatestid = `wrong-answer-${i}`;\n            }\n            return (\n              <button\n                key={ a }\n                type=\"button\"\n                data-testid={ datatestid }\n              >\n                {a}\n              </button>);\n          })}\n        </div>\n      </div>\n\n    );\n  }\n}\n\nQuestions.propTypes = {\n  question: PropTypes.shape({\n    correct_answer: PropTypes.string,\n    incorrect_answers: PropTypes.arrayOf(PropTypes.string),\n    category: PropTypes.string,\n    question: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Questions;\n"]},"metadata":{},"sourceType":"module"}